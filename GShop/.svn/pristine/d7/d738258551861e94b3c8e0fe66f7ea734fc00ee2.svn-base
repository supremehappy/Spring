package dao;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

import model.Admin;
import model.Charge;
import model.AdminCondition;
import model.Game;
import model.Order;
import model.User;

@Repository
public class AdminDaoImpl implements AdminDao{

	@Autowired
	private SqlSession session;
	
//-------- 관리자 id 찾기
	public Admin findByAdminId(Admin admin) {
		
		Admin item = this.session.selectOne("loginAuthorityMapper.getAdmin",admin); 
		System.out.println("AdminDaoImpl id "+item.getAdminId());
		return item;
	}

	public String findId(String id){
		String item = this.session.selectOne("loginAuthorityMapper.getId",id);
		System.out.println("AdminDaoImpl id2 "+item);
		return item;
	}

//-------- 충전관리
	public List<Charge> findChargeListAll(AdminCondition con) {
		return this.session.selectList("adminMapper.findChargeListAll",con);
	}

	public List<Charge> findChargeListForId(AdminCondition con) {
		return this.session.selectList("adminMapper.findChargeListForId",con);
	}

	public List<Charge> findChargeListForAmount(AdminCondition con) {
		return this.session.selectList("adminMapper.findChargeListForAmount",con);
	}
	
	//-------- 충전관리 - 목록 카운트
	public Integer getChargeCountAll() {
		return session.selectOne("adminMapper.getChargeCountAll");
	}
	
	public Integer getChargeCountForId(String id){
		return session.selectOne("adminMapper.getChargeCountForId",id);
	}
	
	public Integer getChargeCountForAmount(Integer total_amount){
		return session.selectOne("adminMapper.getChargeCountForAmount",total_amount);
	}
	
//-------- 게임관리
	public List<Game> findGameListAll(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findGameListAll",con);
	}

	public List<Game> findGameListForName(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findGameListForName",con);
	}

	public List<Game> findGameListForCategory(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findGameListForCategory",con);
	}

	public List<Game> findGameListForDiscountRate(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findGameListForDiscountRate",con);
	}

	//-------- 게임관리 - 목록 카운트
	public Integer getGameCountAll() {
		return session.selectOne("adminMapper.getGameCountAll");
	}
	
	public Integer getGameCountForGameName(String game_name){
		System.out.println("AdminDaoImpl game game_name "+game_name);
		return session.selectOne("adminMapper.getGameCountForGameName",game_name);
	}
	
	public Integer getGameCountForGenreName(String genre_name){
		System.out.println("AdminDaoImpl genre genre_name "+genre_name);
		return session.selectOne("adminMapper.getGameCountForGenreName",genre_name);
	}
	
	public Integer getGameCountForDiscountRate(Integer discount_rate){
		return session.selectOne("adminMapper.getGameCountForDiscountRate",discount_rate);
	}
	
//-------- 회원관리
	public List<User> findMemberListAll(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findMemberListAll",con);
	}

	public List<User> findMemberForId(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findMemberForId",con);
	}

	public List<User> findMemberForNickName(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findMemberForNickName",con);
	}

	public List<User> findMemberForEmail(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findMemberForEmail",con);
	}
	
	//-------- 회원관리 - 목록 카운트
	public Integer getMemberCountAll() {
		return session.selectOne("adminMapper.getMemberCountAll");
	}
	
	public Integer getMemberCountForId(String user_id){
		return session.selectOne("adminMapper.getMemberCountForId",user_id);
	}
	
	public Integer getMemberCountForNickName(String nickname){
		return session.selectOne("adminMapper.getMemberCountForNickName",nickname);
	}
	
	public Integer getMemberCountForEmail(String email){
		return session.selectOne("adminMapper.getMemberCountForEmail",email);
	}
	
	//-------- 회원관리 - 마이페이지
	public User findUser(User user){
		return session.selectOne("adminMapper.findUser",user);
	}
	
//-------- 구매정보
	public List<Order> findPurchaseListAll(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findPurchaseListAll",con);
	}

	public List<Order> findPurchaseForId(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findPurchaseForId",con);
	}

	public List<Order> findPurchaseForGameName(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findPurchaseForGameName",con);
	}

	public List<Order> findPurchaseForAmount(AdminCondition con) {
		
		return this.session.selectList("adminMapper.findPurchaseForAmount",con);
	}
	
	//-------- 구매정보 - 목록 카운트
	public Integer getPurchaseCountAll() {
		return session.selectOne("adminMapper.getPurchaseCountAll");
	}
	
	public Integer getPurchaseCountForId(String user_id){
		return session.selectOne("adminMapper.getPurchaseCountForId",user_id);
	}
	
	public Integer getPurchaseCountForGameName(String game_name){
		return session.selectOne("adminMapper.getPurchaseCountForGameName",game_name);
	}
	
	public Integer getPurchaseCountForAmount(Integer total_amount){
		return session.selectOne("adminMapper.getPurchaseCountForAmount",total_amount);
	}
}
